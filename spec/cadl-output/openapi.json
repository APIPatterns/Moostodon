{
  "openapi": "3.0.0",
  "info": {
    "title": "Mastodon",
    "version": "1.0.0"
  },
  "tags": [],
  "paths": {
    "/api/v1/oauth/authorize": {
      "get": {
        "operationId": "OAuthService_authorize",
        "parameters": [
          {
            "name": "client_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "redirect_uri",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "response_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "force_login",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "lang",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Redirection",
            "headers": {
              "location": {
                "required": true,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          }
        }
      }
    },
    "/api/v1/oauth/token": {
      "post": {
        "operationId": "OAuthService_token",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1.TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "The server could not understand the request due to invalid syntax."
          },
          "401": {
            "description": "Access is unauthorized."
          }
        },
        "requestBody": {
          "content": {
            "application/form-data": {
              "schema": {
                "$ref": "#/components/schemas/v1.TokenBody"
              }
            }
          }
        }
      }
    },
    "/api/v1/oauth/revoke": {
      "post": {
        "operationId": "OAuthService_revoke",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded."
          },
          "403": {
            "description": "Access is forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/form-data": {
              "schema": {
                "$ref": "#/components/schemas/v1.RevokeBody"
              }
            }
          }
        }
      }
    },
    "/api/v1/apps": {
      "post": {
        "operationId": "AppsService_createApp",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1.Application"
                }
              }
            }
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1.UnprocessableContentError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/v1.CreateAppBody"
              }
            }
          }
        }
      }
    },
    "/api/v1/apps/verify_credentials": {
      "get": {
        "operationId": "AppsService_verifyCredentials",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1.Application"
                }
              }
            }
          },
          "401": {
            "description": "Access is unauthorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1.UnauthorizedError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts": {
      "post": {
        "operationId": "AccountsService_createAccount",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1.Account"
                }
              }
            }
          },
          "401": {
            "description": "Access is unauthorized."
          }
        },
        "requestBody": {
          "content": {
            "application/form-data": {
              "schema": {
                "$ref": "#/components/schemas/v1.CreateAccountBody"
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/{id}": {
      "get": {
        "operationId": "AccountService_getAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1.Account"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource."
          }
        }
      },
      "patch": {
        "operationId": "AccountService_updateAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1.Account"
                }
              }
            }
          },
          "401": {
            "description": "Access is unauthorized."
          },
          "403": {
            "description": "Access is forbidden"
          },
          "404": {
            "description": "The server cannot find the requested resource."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1.Account"
              }
            }
          }
        }
      }
    },
    "/api/v1/accounts/{id}/statuses": {
      "get": {
        "operationId": "AccountStatusesService_getStatuses",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/v1.Status"
                  },
                  "x-cadl-name": "v1.Status[]"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource."
          }
        }
      }
    },
    "/api/v1/timelines/public": {
      "get": {
        "operationId": "PublicTimelines_items",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/v1.Status"
                  },
                  "x-cadl-name": "v1.Status[]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/timelines/tag/{tag}": {
      "get": {
        "operationId": "TagTimeline_getStatusByTag",
        "parameters": [
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/v1.Status"
                  },
                  "x-cadl-name": "v1.Status[]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/search": {
      "get": {
        "operationId": "SearchService_search",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "accounts",
                "hashtags",
                "statuses"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2.SearchResult"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "v1.TokenBody": {
        "type": "object",
        "properties": {
          "grant_type": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "redirect_uri": {
            "type": "string"
          },
          "scopes": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "required": [
          "grant_type",
          "client_id",
          "client_secret",
          "redirect_uri",
          "scopes",
          "code"
        ]
      },
      "v1.TokenResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "created_at": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "access_token",
          "token_type",
          "scope",
          "created_at"
        ]
      },
      "v1.RevokeBody": {
        "type": "object",
        "properties": {
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "client_id",
          "client_secret",
          "token"
        ]
      },
      "v1.CreateAppBody": {
        "type": "object",
        "properties": {
          "client_name": {
            "type": "string"
          },
          "redirect_uris": {
            "type": "string"
          },
          "scopes": {
            "type": "string"
          },
          "website": {
            "type": "string"
          }
        },
        "required": [
          "client_name",
          "redirect_uris",
          "scopes",
          "website"
        ]
      },
      "v1.Application": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "redirect_uri": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "client_secret": {
            "type": "string"
          },
          "vapid_key": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "website",
          "redirect_uri",
          "client_id",
          "client_secret",
          "vapid_key"
        ]
      },
      "v1.UnprocessableContentError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "error_description": {
            "type": "string"
          }
        },
        "required": [
          "error",
          "error_description"
        ]
      },
      "v1.UnauthorizedError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "error_description": {
            "type": "string"
          }
        },
        "required": [
          "error",
          "error_description"
        ]
      },
      "v1.CreateAccountBody": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "agreement": {
            "type": "boolean"
          },
          "locale": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "email",
          "password",
          "agreement",
          "locale",
          "reason"
        ]
      },
      "v1.Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "acct": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "locked": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string"
          },
          "followers_count": {
            "type": "integer",
            "format": "int32"
          },
          "following_count": {
            "type": "integer",
            "format": "int32"
          },
          "statuses_count": {
            "type": "integer",
            "format": "int32"
          },
          "note": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "avatar_static": {
            "type": "string"
          },
          "header": {
            "type": "string"
          },
          "header_static": {
            "type": "string"
          },
          "emojis": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-cadl-name": "string[]"
          },
          "moved": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1.field"
            },
            "x-cadl-name": "v1.field[]"
          },
          "bot": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "username",
          "acct",
          "display_name",
          "locked",
          "created_at",
          "followers_count",
          "following_count",
          "statuses_count",
          "note",
          "url",
          "avatar",
          "avatar_static",
          "header",
          "header_static",
          "emojis",
          "moved",
          "fields",
          "bot"
        ]
      },
      "v1.Status": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "uri": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "account": {
            "$ref": "#/components/schemas/v1.Account"
          },
          "in_reply_to_id": {
            "type": "string"
          },
          "in_reply_to_account_id": {
            "type": "string"
          },
          "reblog": {
            "$ref": "#/components/schemas/v1.Status"
          },
          "content": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "emojis": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-cadl-name": "string[]"
          },
          "replies_count": {
            "type": "integer",
            "format": "int32"
          },
          "reblogs_count": {
            "type": "integer",
            "format": "int32"
          },
          "favourites_count": {
            "type": "integer",
            "format": "int32"
          },
          "reblogged": {
            "type": "boolean"
          },
          "favourited": {
            "type": "boolean"
          },
          "muted": {
            "type": "boolean"
          },
          "sensitive": {
            "type": "boolean"
          },
          "spoiler_text": {
            "type": "string"
          },
          "visibility": {
            "type": "string"
          },
          "media_attachments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-cadl-name": "string[]"
          },
          "mentions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-cadl-name": "string[]"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-cadl-name": "string[]"
          },
          "card": {
            "type": "string"
          },
          "poll": {
            "type": "string"
          },
          "application": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "pinned": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "uri",
          "url",
          "account",
          "in_reply_to_id",
          "in_reply_to_account_id",
          "reblog",
          "content",
          "created_at",
          "emojis",
          "replies_count",
          "reblogs_count",
          "favourites_count",
          "reblogged",
          "favourited",
          "muted",
          "sensitive",
          "spoiler_text",
          "visibility",
          "media_attachments",
          "mentions",
          "tags",
          "card",
          "poll",
          "application",
          "language",
          "pinned"
        ]
      },
      "v2.SearchResult": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1.Account"
            },
            "x-cadl-name": "v1.Account[]"
          },
          "hashtags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1.Tag"
            },
            "x-cadl-name": "v1.Tag[]"
          },
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1.Status"
            },
            "x-cadl-name": "v1.Status[]"
          }
        },
        "required": [
          "accounts",
          "hashtags",
          "statuses"
        ]
      },
      "v1.AuthorizeResponse": {
        "type": "object",
        "properties": {}
      },
      "v1.Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "error_description": {
            "type": "string"
          }
        },
        "required": [
          "error",
          "error_description"
        ]
      },
      "v1.field": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "verified_at": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "value",
          "verified_at"
        ]
      },
      "v1.Tag": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1.HistoryItem"
            },
            "x-cadl-name": "v1.HistoryItem[]"
          },
          "following": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "url",
          "history",
          "following"
        ]
      },
      "v1.HistoryItem": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string"
          },
          "uses": {
            "type": "string"
          },
          "accounts": {
            "type": "string"
          }
        },
        "required": [
          "day",
          "uses",
          "accounts"
        ]
      },
      "v2.SearchType": {
        "type": "string",
        "enum": [
          "accounts",
          "hashtags",
          "statuses"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://mastodon.example/",
      "description": "Actual server to be set during client setup",
      "variables": {}
    }
  ]
}
